#!/bin/bash
GOT_OUTPUT=false
GOT_PERCENTS=false
GOT_COVERAGE=false
GOT_BED=false
GOT_REF=false
GOT_READLEN=false
OUTPUT=''
PERCENTS=''
COVERAGE=''
BED=""
REF=''
READ_LEN=''
set -e

#Parse through input and store what will be used in later scripts
for var in "$@"; do
    if [ "$var" = "-o" ] ; then
        GOT_OUTPUT=true
    elif [ "$GOT_OUTPUT" = true ] ; then
        OUTPUT="$var"
        GOT_OUTPUT=false
    elif [ "$var" = "-p" ] ; then
        GOT_PERCENTS=true
    elif [ "$GOT_PERCENTS" = true ] ; then
        PERCENTS="$var"
        GOT_PERCENTS=false
    elif [ "$var" = "-c" ] ; then
        GOT_COVERAGE=true
    elif [ "$GOT_COVERAGE" = true ] ; then
        COVERAGE="$var"
        GOT_COVERAGE=false
    elif [ "$var" = "-b" ] ; then
        GOT_BED=true
    elif [ "$GOT_BED" = true ] ; then
        BED="$var"
        GOT_BED=false
    elif [ "$var" = "-r" ] ; then
        GOT_REF=true
    elif [ "$GOT_REF" = true ] ; then
        REF="$var"
        GOT_REF=false
    elif [ "$var" = "-l" ] ; then
        GOT_READLEN=true
    elif [ "$GOT_READLEN" = true ] ; then
        READ_LEN="$var"
        GOT_READLEN=false
    fi
done

#Check if percents add up to 1
python checkPercents.py $PERCENTS

#Check location of genreads.py (NEAT)
declare NEAT_LOCATION=$(python configReader.py config.txt)

#Create folders that will store the outputs of the scripts
VCFLOCATION="VCFs_${OUTPUT}"
VCFFOLDER="VCFs_${OUTPUT}/*.vcf"
READSFOLDER="Reads_${OUTPUT}"
READSLOCATION="${READSFOLDER}"
MERGEDFASTQ="${OUTPUT}_Final"

mkdir $VCFLOCATION || true

#Takes in all of the user input and generates the VCF files.
declare NEAT_INPUT=$(python fasTree.py "$@")

#Check for required inputs that the user might have not provided
if [ "$COVERAGE" = "" ] ; then
    echo No coverage, using Default.
    COVERAGE="15"
fi
if [ "$READ_LEN" = "" ] ; then
    echo No read length, using Default.
    READ_LEN="100"
fi

mkdir $READSFOLDER || true
#Run NEAT genreads on the VCF files generated by the previous script
for filename in $VCFFOLDER; do
    name=$(basename $filename)
    #Creates a new name for the read file
    newname=$(python VCFExtRemover.py $name)
    NEWOUTPUT="Reads_${OUTPUT}/${newname}"
    python $NEAT_LOCATION $NEAT_INPUT -o $NEWOUTPUT -v $filename
    echo $NEWOUTPUT
    
done
echo Reads have been generated. 
#Stores the length of the input sample.
if [ "$BED" != "" ] ; then
    declare LENGTH=$(python bedParser.py "$BED")

else
    declare LENGTH=$(python indexParser.py "$REF")
fi
#Generates the final FASTQ file using the percents file 
python FASTQParser.py -o $OUTPUT -p $PERCENTS -d $READSLOCATION -c $COVERAGE -l $LENGTH -r $READ_LEN

echo Final read has been generated.